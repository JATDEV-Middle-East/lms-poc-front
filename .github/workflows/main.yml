name: Build Angular LMS APP

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]


env:
  REGISTRY: registry.digitalocean.com
  IMAGE_NAME: jatdev-registry/lms-front
jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Build Angular app
        run: npm run build -- --output-path=./dist/lms-app --configuration production

  build-image:
    name: Security Scan Report
    runs-on: ubuntu-latest
    needs: [ build-and-test ]
    steps:
    - uses: actions/checkout@v4
    # - name: Log in to DigitalOcean Container Registry
    #   uses: docker/login-action@v2
    #   with:
    #     registry: ${{ env.REGISTRY }}
    #     username: ${{ secrets.DO_USERNAME }}
    #     password: ${{ secrets.DO_TOKEN}}

    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v4  # Action that generates Docker metadata
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |  # Tag generation rules
          type=sha  # Tag with git SHA
          type=semver,pattern={{version}}  # Tag with version if available
        #   type=ref,event=branch  # Tag with branch name

    - name: Build and export Docker image
      id: docker_build
      uses: docker/build-push-action@v4
      with:
        context: .
        push: false
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

    # Security scan with Trivy (vulnerability scanner)
    - name: Scan image with Trivy
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ steps.docker_build.outputs.imageid }}
        format: 'table'
        exit-code: '1'  # Fail the workflow if vulnerabilities found
        ignore-unfixed: true  # Only report fixed vulnerabilities
        vuln-type: 'os,library'  # Scan both OS and library vulnerabilities
        severity: 'CRITICAL,HIGH'  # Only report critical and high severity issues

    # - name: Push to DigitalOcean Container Registry
    #   if: github.event_name != 'pull_request'
    #   uses: docker/build-push-action@v4
    #   with:
    #     context: .
    #     push: true
    #     tags: ${{ steps.meta.outputs.tags }}
    #     labels: ${{ steps.meta.outputs.labels }}
